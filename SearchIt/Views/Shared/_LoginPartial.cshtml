@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject SearchIt.DataAccess.Repository.IRepository.IUnitOfWork _unitOfWork

@{
    var UserId = UserManager.GetUserId(User);
    var UsersInfo = _unitOfWork.ApplicationUser.GetFirstOrDefault(u => u.Id == UserId);
    int? CompanyId = null;
    if(UsersInfo != null)
    {
        CompanyId = UsersInfo.CompanyId;
    }
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        <li class="nav-item">
            @if(CompanyId==null){
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
            }
            else{
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/IndexCompany" title="Manage">Hello @UserManager.GetUserName(User)!</a>

            }
            
        </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="registerCompany" asp-area="" asp-controller="/Companies" asp-action="Create">Register as Company</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
